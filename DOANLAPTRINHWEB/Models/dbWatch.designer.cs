#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DOANLAPTRINHWEB.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyBanDongHo")]
	public partial class dbWatchDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHATLIEUMATKINH(CHATLIEUMATKINH instance);
    partial void UpdateCHATLIEUMATKINH(CHATLIEUMATKINH instance);
    partial void DeleteCHATLIEUMATKINH(CHATLIEUMATKINH instance);
    partial void InsertVAITRO(VAITRO instance);
    partial void UpdateVAITRO(VAITRO instance);
    partial void DeleteVAITRO(VAITRO instance);
    partial void InsertCTHOADONBANDONGHO(CTHOADONBANDONGHO instance);
    partial void UpdateCTHOADONBANDONGHO(CTHOADONBANDONGHO instance);
    partial void DeleteCTHOADONBANDONGHO(CTHOADONBANDONGHO instance);
    partial void InsertDONGHO(DONGHO instance);
    partial void UpdateDONGHO(DONGHO instance);
    partial void DeleteDONGHO(DONGHO instance);
    partial void InsertGIOITINH(GIOITINH instance);
    partial void UpdateGIOITINH(GIOITINH instance);
    partial void DeleteGIOITINH(GIOITINH instance);
    partial void InsertHINHDANG(HINHDANG instance);
    partial void UpdateHINHDANG(HINHDANG instance);
    partial void DeleteHINHDANG(HINHDANG instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKICHTHUOC(KICHTHUOC instance);
    partial void UpdateKICHTHUOC(KICHTHUOC instance);
    partial void DeleteKICHTHUOC(KICHTHUOC instance);
    partial void InsertLOAIDAY(LOAIDAY instance);
    partial void UpdateLOAIDAY(LOAIDAY instance);
    partial void DeleteLOAIDAY(LOAIDAY instance);
    partial void InsertLOAIDONGHO(LOAIDONGHO instance);
    partial void UpdateLOAIDONGHO(LOAIDONGHO instance);
    partial void DeleteLOAIDONGHO(LOAIDONGHO instance);
    partial void InsertMUCDOCHONGNUOC(MUCDOCHONGNUOC instance);
    partial void UpdateMUCDOCHONGNUOC(MUCDOCHONGNUOC instance);
    partial void DeleteMUCDOCHONGNUOC(MUCDOCHONGNUOC instance);
    partial void InsertQUANTRI(QUANTRI instance);
    partial void UpdateQUANTRI(QUANTRI instance);
    partial void DeleteQUANTRI(QUANTRI instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTHUONGHIEU(THUONGHIEU instance);
    partial void UpdateTHUONGHIEU(THUONGHIEU instance);
    partial void DeleteTHUONGHIEU(THUONGHIEU instance);
    partial void InsertTINHTRANGDONHANG(TINHTRANGDONHANG instance);
    partial void UpdateTINHTRANGDONHANG(TINHTRANGDONHANG instance);
    partial void DeleteTINHTRANGDONHANG(TINHTRANGDONHANG instance);
    #endregion
		
		public dbWatchDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuanLyBanDongHoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbWatchDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbWatchDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbWatchDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbWatchDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHATLIEUMATKINH> CHATLIEUMATKINHs
		{
			get
			{
				return this.GetTable<CHATLIEUMATKINH>();
			}
		}
		
		public System.Data.Linq.Table<VAITRO> VAITROs
		{
			get
			{
				return this.GetTable<VAITRO>();
			}
		}
		
		public System.Data.Linq.Table<CTHOADONBANDONGHO> CTHOADONBANDONGHOs
		{
			get
			{
				return this.GetTable<CTHOADONBANDONGHO>();
			}
		}
		
		public System.Data.Linq.Table<DONGHO> DONGHOs
		{
			get
			{
				return this.GetTable<DONGHO>();
			}
		}
		
		public System.Data.Linq.Table<GIOITINH> GIOITINHs
		{
			get
			{
				return this.GetTable<GIOITINH>();
			}
		}
		
		public System.Data.Linq.Table<HINHDANG> HINHDANGs
		{
			get
			{
				return this.GetTable<HINHDANG>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KICHTHUOC> KICHTHUOCs
		{
			get
			{
				return this.GetTable<KICHTHUOC>();
			}
		}
		
		public System.Data.Linq.Table<LOAIDAY> LOAIDAYs
		{
			get
			{
				return this.GetTable<LOAIDAY>();
			}
		}
		
		public System.Data.Linq.Table<LOAIDONGHO> LOAIDONGHOs
		{
			get
			{
				return this.GetTable<LOAIDONGHO>();
			}
		}
		
		public System.Data.Linq.Table<MUCDOCHONGNUOC> MUCDOCHONGNUOCs
		{
			get
			{
				return this.GetTable<MUCDOCHONGNUOC>();
			}
		}
		
		public System.Data.Linq.Table<QUANTRI> QUANTRIs
		{
			get
			{
				return this.GetTable<QUANTRI>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<THUONGHIEU> THUONGHIEUs
		{
			get
			{
				return this.GetTable<THUONGHIEU>();
			}
		}
		
		public System.Data.Linq.Table<TINHTRANGDONHANG> TINHTRANGDONHANGs
		{
			get
			{
				return this.GetTable<TINHTRANGDONHANG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHATLIEUMATKINH")]
	public partial class CHATLIEUMATKINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChatLieuMatKinh;
		
		private string _TenChatLieuMatKinh;
		
		private EntitySet<DONGHO> _DONGHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChatLieuMatKinhChanging(int value);
    partial void OnMaChatLieuMatKinhChanged();
    partial void OnTenChatLieuMatKinhChanging(string value);
    partial void OnTenChatLieuMatKinhChanged();
    #endregion
		
		public CHATLIEUMATKINH()
		{
			this._DONGHOs = new EntitySet<DONGHO>(new Action<DONGHO>(this.attach_DONGHOs), new Action<DONGHO>(this.detach_DONGHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChatLieuMatKinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChatLieuMatKinh
		{
			get
			{
				return this._MaChatLieuMatKinh;
			}
			set
			{
				if ((this._MaChatLieuMatKinh != value))
				{
					this.OnMaChatLieuMatKinhChanging(value);
					this.SendPropertyChanging();
					this._MaChatLieuMatKinh = value;
					this.SendPropertyChanged("MaChatLieuMatKinh");
					this.OnMaChatLieuMatKinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChatLieuMatKinh", DbType="NVarChar(100)")]
		public string TenChatLieuMatKinh
		{
			get
			{
				return this._TenChatLieuMatKinh;
			}
			set
			{
				if ((this._TenChatLieuMatKinh != value))
				{
					this.OnTenChatLieuMatKinhChanging(value);
					this.SendPropertyChanging();
					this._TenChatLieuMatKinh = value;
					this.SendPropertyChanged("TenChatLieuMatKinh");
					this.OnTenChatLieuMatKinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHATLIEUMATKINH_DONGHO", Storage="_DONGHOs", ThisKey="MaChatLieuMatKinh", OtherKey="IDChatLieuMatKinh")]
		public EntitySet<DONGHO> DONGHOs
		{
			get
			{
				return this._DONGHOs;
			}
			set
			{
				this._DONGHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.CHATLIEUMATKINH = this;
		}
		
		private void detach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.CHATLIEUMATKINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VAITRO")]
	public partial class VAITRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaVaiTro;
		
		private string _TenVaiTro;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVaiTroChanging(int value);
    partial void OnMaVaiTroChanged();
    partial void OnTenVaiTroChanging(string value);
    partial void OnTenVaiTroChanged();
    #endregion
		
		public VAITRO()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVaiTro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaVaiTro
		{
			get
			{
				return this._MaVaiTro;
			}
			set
			{
				if ((this._MaVaiTro != value))
				{
					this.OnMaVaiTroChanging(value);
					this.SendPropertyChanging();
					this._MaVaiTro = value;
					this.SendPropertyChanged("MaVaiTro");
					this.OnMaVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVaiTro", DbType="NVarChar(50)")]
		public string TenVaiTro
		{
			get
			{
				return this._TenVaiTro;
			}
			set
			{
				if ((this._TenVaiTro != value))
				{
					this.OnTenVaiTroChanging(value);
					this.SendPropertyChanging();
					this._TenVaiTro = value;
					this.SendPropertyChanged("TenVaiTro");
					this.OnTenVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VAITRO_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MaVaiTro", OtherKey="IDVaiTro")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.VAITRO = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.VAITRO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHOADONBANDONGHO")]
	public partial class CTHOADONBANDONGHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCTHD;
		
		private System.Nullable<int> _IDHoaDon;
		
		private System.Nullable<int> _IDDongHo;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<DONGHO> _DONGHO;
		
		private EntityRef<HOADON> _HOADON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTHDChanging(int value);
    partial void OnMaCTHDChanged();
    partial void OnIDHoaDonChanging(System.Nullable<int> value);
    partial void OnIDHoaDonChanged();
    partial void OnIDDongHoChanging(System.Nullable<int> value);
    partial void OnIDDongHoChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTHOADONBANDONGHO()
		{
			this._DONGHO = default(EntityRef<DONGHO>);
			this._HOADON = default(EntityRef<HOADON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCTHD
		{
			get
			{
				return this._MaCTHD;
			}
			set
			{
				if ((this._MaCTHD != value))
				{
					this.OnMaCTHDChanging(value);
					this.SendPropertyChanging();
					this._MaCTHD = value;
					this.SendPropertyChanged("MaCTHD");
					this.OnMaCTHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoaDon", DbType="Int")]
		public System.Nullable<int> IDHoaDon
		{
			get
			{
				return this._IDHoaDon;
			}
			set
			{
				if ((this._IDHoaDon != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IDHoaDon = value;
					this.SendPropertyChanged("IDHoaDon");
					this.OnIDHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDongHo", DbType="Int")]
		public System.Nullable<int> IDDongHo
		{
			get
			{
				return this._IDDongHo;
			}
			set
			{
				if ((this._IDDongHo != value))
				{
					if (this._DONGHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDongHoChanging(value);
					this.SendPropertyChanging();
					this._IDDongHo = value;
					this.SendPropertyChanged("IDDongHo");
					this.OnIDDongHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONGHO_CTHOADONBANDONGHO", Storage="_DONGHO", ThisKey="IDDongHo", OtherKey="MaDongHo", IsForeignKey=true, DeleteRule="SET NULL")]
		public DONGHO DONGHO
		{
			get
			{
				return this._DONGHO.Entity;
			}
			set
			{
				DONGHO previousValue = this._DONGHO.Entity;
				if (((previousValue != value) 
							|| (this._DONGHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONGHO.Entity = null;
						previousValue.CTHOADONBANDONGHOs.Remove(this);
					}
					this._DONGHO.Entity = value;
					if ((value != null))
					{
						value.CTHOADONBANDONGHOs.Add(this);
						this._IDDongHo = value.MaDongHo;
					}
					else
					{
						this._IDDongHo = default(Nullable<int>);
					}
					this.SendPropertyChanged("DONGHO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADONBANDONGHO", Storage="_HOADON", ThisKey="IDHoaDon", OtherKey="MaHoaDon", IsForeignKey=true, DeleteRule="CASCADE")]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHOADONBANDONGHOs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHOADONBANDONGHOs.Add(this);
						this._IDHoaDon = value.MaHoaDon;
					}
					else
					{
						this._IDHoaDon = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONGHO")]
	public partial class DONGHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDongHo;
		
		private string _TenDongHo;
		
		private string _MoTa;
		
		private System.Nullable<int> _IDGioiTinh;
		
		private string _ThoiGianBaoHanh;
		
		private string _HinhDongHo;
		
		private string _LoaiMay;
		
		private System.Nullable<double> _GiaNhap;
		
		private System.Nullable<double> _GiaBan;
		
		private System.Nullable<int> _SLTon;
		
		private System.Nullable<int> _IDThuongHieu;
		
		private System.Nullable<int> _IDLoaiDay;
		
		private System.Nullable<int> _IDChatLieuMatKinh;
		
		private System.Nullable<int> _IDHinhDangMatSo;
		
		private System.Nullable<int> _IDKichThuocMatSo;
		
		private System.Nullable<int> _IDMucDoChongNuoc;
		
		private System.Nullable<int> _IDLoaiDongHo;
		
		private EntitySet<CTHOADONBANDONGHO> _CTHOADONBANDONGHOs;
		
		private EntityRef<CHATLIEUMATKINH> _CHATLIEUMATKINH;
		
		private EntityRef<GIOITINH> _GIOITINH;
		
		private EntityRef<HINHDANG> _HINHDANG;
		
		private EntityRef<KICHTHUOC> _KICHTHUOC;
		
		private EntityRef<LOAIDAY> _LOAIDAY;
		
		private EntityRef<LOAIDONGHO> _LOAIDONGHO;
		
		private EntityRef<MUCDOCHONGNUOC> _MUCDOCHONGNUOC;
		
		private EntityRef<THUONGHIEU> _THUONGHIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDongHoChanging(int value);
    partial void OnMaDongHoChanged();
    partial void OnTenDongHoChanging(string value);
    partial void OnTenDongHoChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnIDGioiTinhChanging(System.Nullable<int> value);
    partial void OnIDGioiTinhChanged();
    partial void OnThoiGianBaoHanhChanging(string value);
    partial void OnThoiGianBaoHanhChanged();
    partial void OnHinhDongHoChanging(string value);
    partial void OnHinhDongHoChanged();
    partial void OnLoaiMayChanging(string value);
    partial void OnLoaiMayChanged();
    partial void OnGiaNhapChanging(System.Nullable<double> value);
    partial void OnGiaNhapChanged();
    partial void OnGiaBanChanging(System.Nullable<double> value);
    partial void OnGiaBanChanged();
    partial void OnSLTonChanging(System.Nullable<int> value);
    partial void OnSLTonChanged();
    partial void OnIDThuongHieuChanging(System.Nullable<int> value);
    partial void OnIDThuongHieuChanged();
    partial void OnIDLoaiDayChanging(System.Nullable<int> value);
    partial void OnIDLoaiDayChanged();
    partial void OnIDChatLieuMatKinhChanging(System.Nullable<int> value);
    partial void OnIDChatLieuMatKinhChanged();
    partial void OnIDHinhDangMatSoChanging(System.Nullable<int> value);
    partial void OnIDHinhDangMatSoChanged();
    partial void OnIDKichThuocMatSoChanging(System.Nullable<int> value);
    partial void OnIDKichThuocMatSoChanged();
    partial void OnIDMucDoChongNuocChanging(System.Nullable<int> value);
    partial void OnIDMucDoChongNuocChanged();
    partial void OnIDLoaiDongHoChanging(System.Nullable<int> value);
    partial void OnIDLoaiDongHoChanged();
    #endregion
		
		public DONGHO()
		{
			this._CTHOADONBANDONGHOs = new EntitySet<CTHOADONBANDONGHO>(new Action<CTHOADONBANDONGHO>(this.attach_CTHOADONBANDONGHOs), new Action<CTHOADONBANDONGHO>(this.detach_CTHOADONBANDONGHOs));
			this._CHATLIEUMATKINH = default(EntityRef<CHATLIEUMATKINH>);
			this._GIOITINH = default(EntityRef<GIOITINH>);
			this._HINHDANG = default(EntityRef<HINHDANG>);
			this._KICHTHUOC = default(EntityRef<KICHTHUOC>);
			this._LOAIDAY = default(EntityRef<LOAIDAY>);
			this._LOAIDONGHO = default(EntityRef<LOAIDONGHO>);
			this._MUCDOCHONGNUOC = default(EntityRef<MUCDOCHONGNUOC>);
			this._THUONGHIEU = default(EntityRef<THUONGHIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDongHo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDongHo
		{
			get
			{
				return this._MaDongHo;
			}
			set
			{
				if ((this._MaDongHo != value))
				{
					this.OnMaDongHoChanging(value);
					this.SendPropertyChanging();
					this._MaDongHo = value;
					this.SendPropertyChanged("MaDongHo");
					this.OnMaDongHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDongHo", DbType="NVarChar(100)")]
		public string TenDongHo
		{
			get
			{
				return this._TenDongHo;
			}
			set
			{
				if ((this._TenDongHo != value))
				{
					this.OnTenDongHoChanging(value);
					this.SendPropertyChanging();
					this._TenDongHo = value;
					this.SendPropertyChanged("TenDongHo");
					this.OnTenDongHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(500)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGioiTinh", DbType="Int")]
		public System.Nullable<int> IDGioiTinh
		{
			get
			{
				return this._IDGioiTinh;
			}
			set
			{
				if ((this._IDGioiTinh != value))
				{
					if (this._GIOITINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._IDGioiTinh = value;
					this.SendPropertyChanged("IDGioiTinh");
					this.OnIDGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBaoHanh", DbType="NVarChar(50)")]
		public string ThoiGianBaoHanh
		{
			get
			{
				return this._ThoiGianBaoHanh;
			}
			set
			{
				if ((this._ThoiGianBaoHanh != value))
				{
					this.OnThoiGianBaoHanhChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBaoHanh = value;
					this.SendPropertyChanged("ThoiGianBaoHanh");
					this.OnThoiGianBaoHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhDongHo", DbType="VarChar(100)")]
		public string HinhDongHo
		{
			get
			{
				return this._HinhDongHo;
			}
			set
			{
				if ((this._HinhDongHo != value))
				{
					this.OnHinhDongHoChanging(value);
					this.SendPropertyChanging();
					this._HinhDongHo = value;
					this.SendPropertyChanged("HinhDongHo");
					this.OnHinhDongHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiMay", DbType="NVarChar(50)")]
		public string LoaiMay
		{
			get
			{
				return this._LoaiMay;
			}
			set
			{
				if ((this._LoaiMay != value))
				{
					this.OnLoaiMayChanging(value);
					this.SendPropertyChanging();
					this._LoaiMay = value;
					this.SendPropertyChanged("LoaiMay");
					this.OnLoaiMayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhap", DbType="Float")]
		public System.Nullable<double> GiaNhap
		{
			get
			{
				return this._GiaNhap;
			}
			set
			{
				if ((this._GiaNhap != value))
				{
					this.OnGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._GiaNhap = value;
					this.SendPropertyChanged("GiaNhap");
					this.OnGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Float")]
		public System.Nullable<double> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTon", DbType="Int")]
		public System.Nullable<int> SLTon
		{
			get
			{
				return this._SLTon;
			}
			set
			{
				if ((this._SLTon != value))
				{
					this.OnSLTonChanging(value);
					this.SendPropertyChanging();
					this._SLTon = value;
					this.SendPropertyChanged("SLTon");
					this.OnSLTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThuongHieu", DbType="Int")]
		public System.Nullable<int> IDThuongHieu
		{
			get
			{
				return this._IDThuongHieu;
			}
			set
			{
				if ((this._IDThuongHieu != value))
				{
					if (this._THUONGHIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._IDThuongHieu = value;
					this.SendPropertyChanged("IDThuongHieu");
					this.OnIDThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiDay", DbType="Int")]
		public System.Nullable<int> IDLoaiDay
		{
			get
			{
				return this._IDLoaiDay;
			}
			set
			{
				if ((this._IDLoaiDay != value))
				{
					if (this._LOAIDAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiDayChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiDay = value;
					this.SendPropertyChanged("IDLoaiDay");
					this.OnIDLoaiDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChatLieuMatKinh", DbType="Int")]
		public System.Nullable<int> IDChatLieuMatKinh
		{
			get
			{
				return this._IDChatLieuMatKinh;
			}
			set
			{
				if ((this._IDChatLieuMatKinh != value))
				{
					if (this._CHATLIEUMATKINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChatLieuMatKinhChanging(value);
					this.SendPropertyChanging();
					this._IDChatLieuMatKinh = value;
					this.SendPropertyChanged("IDChatLieuMatKinh");
					this.OnIDChatLieuMatKinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHinhDangMatSo", DbType="Int")]
		public System.Nullable<int> IDHinhDangMatSo
		{
			get
			{
				return this._IDHinhDangMatSo;
			}
			set
			{
				if ((this._IDHinhDangMatSo != value))
				{
					if (this._HINHDANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHinhDangMatSoChanging(value);
					this.SendPropertyChanging();
					this._IDHinhDangMatSo = value;
					this.SendPropertyChanged("IDHinhDangMatSo");
					this.OnIDHinhDangMatSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKichThuocMatSo", DbType="Int")]
		public System.Nullable<int> IDKichThuocMatSo
		{
			get
			{
				return this._IDKichThuocMatSo;
			}
			set
			{
				if ((this._IDKichThuocMatSo != value))
				{
					if (this._KICHTHUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKichThuocMatSoChanging(value);
					this.SendPropertyChanging();
					this._IDKichThuocMatSo = value;
					this.SendPropertyChanged("IDKichThuocMatSo");
					this.OnIDKichThuocMatSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMucDoChongNuoc", DbType="Int")]
		public System.Nullable<int> IDMucDoChongNuoc
		{
			get
			{
				return this._IDMucDoChongNuoc;
			}
			set
			{
				if ((this._IDMucDoChongNuoc != value))
				{
					if (this._MUCDOCHONGNUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMucDoChongNuocChanging(value);
					this.SendPropertyChanging();
					this._IDMucDoChongNuoc = value;
					this.SendPropertyChanged("IDMucDoChongNuoc");
					this.OnIDMucDoChongNuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiDongHo", DbType="Int")]
		public System.Nullable<int> IDLoaiDongHo
		{
			get
			{
				return this._IDLoaiDongHo;
			}
			set
			{
				if ((this._IDLoaiDongHo != value))
				{
					if (this._LOAIDONGHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiDongHoChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiDongHo = value;
					this.SendPropertyChanged("IDLoaiDongHo");
					this.OnIDLoaiDongHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONGHO_CTHOADONBANDONGHO", Storage="_CTHOADONBANDONGHOs", ThisKey="MaDongHo", OtherKey="IDDongHo")]
		public EntitySet<CTHOADONBANDONGHO> CTHOADONBANDONGHOs
		{
			get
			{
				return this._CTHOADONBANDONGHOs;
			}
			set
			{
				this._CTHOADONBANDONGHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHATLIEUMATKINH_DONGHO", Storage="_CHATLIEUMATKINH", ThisKey="IDChatLieuMatKinh", OtherKey="MaChatLieuMatKinh", IsForeignKey=true, DeleteRule="SET NULL")]
		public CHATLIEUMATKINH CHATLIEUMATKINH
		{
			get
			{
				return this._CHATLIEUMATKINH.Entity;
			}
			set
			{
				CHATLIEUMATKINH previousValue = this._CHATLIEUMATKINH.Entity;
				if (((previousValue != value) 
							|| (this._CHATLIEUMATKINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHATLIEUMATKINH.Entity = null;
						previousValue.DONGHOs.Remove(this);
					}
					this._CHATLIEUMATKINH.Entity = value;
					if ((value != null))
					{
						value.DONGHOs.Add(this);
						this._IDChatLieuMatKinh = value.MaChatLieuMatKinh;
					}
					else
					{
						this._IDChatLieuMatKinh = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHATLIEUMATKINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIOITINH_DONGHO", Storage="_GIOITINH", ThisKey="IDGioiTinh", OtherKey="MaGioiTinh", IsForeignKey=true)]
		public GIOITINH GIOITINH
		{
			get
			{
				return this._GIOITINH.Entity;
			}
			set
			{
				GIOITINH previousValue = this._GIOITINH.Entity;
				if (((previousValue != value) 
							|| (this._GIOITINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIOITINH.Entity = null;
						previousValue.DONGHOs.Remove(this);
					}
					this._GIOITINH.Entity = value;
					if ((value != null))
					{
						value.DONGHOs.Add(this);
						this._IDGioiTinh = value.MaGioiTinh;
					}
					else
					{
						this._IDGioiTinh = default(Nullable<int>);
					}
					this.SendPropertyChanged("GIOITINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHDANG_DONGHO", Storage="_HINHDANG", ThisKey="IDHinhDangMatSo", OtherKey="MaHinhDang", IsForeignKey=true, DeleteRule="SET NULL")]
		public HINHDANG HINHDANG
		{
			get
			{
				return this._HINHDANG.Entity;
			}
			set
			{
				HINHDANG previousValue = this._HINHDANG.Entity;
				if (((previousValue != value) 
							|| (this._HINHDANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HINHDANG.Entity = null;
						previousValue.DONGHOs.Remove(this);
					}
					this._HINHDANG.Entity = value;
					if ((value != null))
					{
						value.DONGHOs.Add(this);
						this._IDHinhDangMatSo = value.MaHinhDang;
					}
					else
					{
						this._IDHinhDangMatSo = default(Nullable<int>);
					}
					this.SendPropertyChanged("HINHDANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHTHUOC_DONGHO", Storage="_KICHTHUOC", ThisKey="IDKichThuocMatSo", OtherKey="MaKichThuoc", IsForeignKey=true, DeleteRule="SET NULL")]
		public KICHTHUOC KICHTHUOC
		{
			get
			{
				return this._KICHTHUOC.Entity;
			}
			set
			{
				KICHTHUOC previousValue = this._KICHTHUOC.Entity;
				if (((previousValue != value) 
							|| (this._KICHTHUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KICHTHUOC.Entity = null;
						previousValue.DONGHOs.Remove(this);
					}
					this._KICHTHUOC.Entity = value;
					if ((value != null))
					{
						value.DONGHOs.Add(this);
						this._IDKichThuocMatSo = value.MaKichThuoc;
					}
					else
					{
						this._IDKichThuocMatSo = default(Nullable<int>);
					}
					this.SendPropertyChanged("KICHTHUOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDAY_DONGHO", Storage="_LOAIDAY", ThisKey="IDLoaiDay", OtherKey="MaLoaiDay", IsForeignKey=true, DeleteRule="SET NULL")]
		public LOAIDAY LOAIDAY
		{
			get
			{
				return this._LOAIDAY.Entity;
			}
			set
			{
				LOAIDAY previousValue = this._LOAIDAY.Entity;
				if (((previousValue != value) 
							|| (this._LOAIDAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIDAY.Entity = null;
						previousValue.DONGHOs.Remove(this);
					}
					this._LOAIDAY.Entity = value;
					if ((value != null))
					{
						value.DONGHOs.Add(this);
						this._IDLoaiDay = value.MaLoaiDay;
					}
					else
					{
						this._IDLoaiDay = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAIDAY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDONGHO_DONGHO", Storage="_LOAIDONGHO", ThisKey="IDLoaiDongHo", OtherKey="MaLoaiDongHo", IsForeignKey=true, DeleteRule="SET NULL")]
		public LOAIDONGHO LOAIDONGHO
		{
			get
			{
				return this._LOAIDONGHO.Entity;
			}
			set
			{
				LOAIDONGHO previousValue = this._LOAIDONGHO.Entity;
				if (((previousValue != value) 
							|| (this._LOAIDONGHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIDONGHO.Entity = null;
						previousValue.DONGHOs.Remove(this);
					}
					this._LOAIDONGHO.Entity = value;
					if ((value != null))
					{
						value.DONGHOs.Add(this);
						this._IDLoaiDongHo = value.MaLoaiDongHo;
					}
					else
					{
						this._IDLoaiDongHo = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAIDONGHO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MUCDOCHONGNUOC_DONGHO", Storage="_MUCDOCHONGNUOC", ThisKey="IDMucDoChongNuoc", OtherKey="MaMucDoChongNuoc", IsForeignKey=true, DeleteRule="SET NULL")]
		public MUCDOCHONGNUOC MUCDOCHONGNUOC
		{
			get
			{
				return this._MUCDOCHONGNUOC.Entity;
			}
			set
			{
				MUCDOCHONGNUOC previousValue = this._MUCDOCHONGNUOC.Entity;
				if (((previousValue != value) 
							|| (this._MUCDOCHONGNUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MUCDOCHONGNUOC.Entity = null;
						previousValue.DONGHOs.Remove(this);
					}
					this._MUCDOCHONGNUOC.Entity = value;
					if ((value != null))
					{
						value.DONGHOs.Add(this);
						this._IDMucDoChongNuoc = value.MaMucDoChongNuoc;
					}
					else
					{
						this._IDMucDoChongNuoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("MUCDOCHONGNUOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_DONGHO", Storage="_THUONGHIEU", ThisKey="IDThuongHieu", OtherKey="MaThuongHieu", IsForeignKey=true, DeleteRule="SET NULL")]
		public THUONGHIEU THUONGHIEU
		{
			get
			{
				return this._THUONGHIEU.Entity;
			}
			set
			{
				THUONGHIEU previousValue = this._THUONGHIEU.Entity;
				if (((previousValue != value) 
							|| (this._THUONGHIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUONGHIEU.Entity = null;
						previousValue.DONGHOs.Remove(this);
					}
					this._THUONGHIEU.Entity = value;
					if ((value != null))
					{
						value.DONGHOs.Add(this);
						this._IDThuongHieu = value.MaThuongHieu;
					}
					else
					{
						this._IDThuongHieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("THUONGHIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONBANDONGHOs(CTHOADONBANDONGHO entity)
		{
			this.SendPropertyChanging();
			entity.DONGHO = this;
		}
		
		private void detach_CTHOADONBANDONGHOs(CTHOADONBANDONGHO entity)
		{
			this.SendPropertyChanging();
			entity.DONGHO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIOITINH")]
	public partial class GIOITINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGioiTinh;
		
		private string _TenGioiTinh;
		
		private EntitySet<DONGHO> _DONGHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGioiTinhChanging(int value);
    partial void OnMaGioiTinhChanged();
    partial void OnTenGioiTinhChanging(string value);
    partial void OnTenGioiTinhChanged();
    #endregion
		
		public GIOITINH()
		{
			this._DONGHOs = new EntitySet<DONGHO>(new Action<DONGHO>(this.attach_DONGHOs), new Action<DONGHO>(this.detach_DONGHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioiTinh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaGioiTinh
		{
			get
			{
				return this._MaGioiTinh;
			}
			set
			{
				if ((this._MaGioiTinh != value))
				{
					this.OnMaGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._MaGioiTinh = value;
					this.SendPropertyChanged("MaGioiTinh");
					this.OnMaGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGioiTinh", DbType="NVarChar(10)")]
		public string TenGioiTinh
		{
			get
			{
				return this._TenGioiTinh;
			}
			set
			{
				if ((this._TenGioiTinh != value))
				{
					this.OnTenGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._TenGioiTinh = value;
					this.SendPropertyChanged("TenGioiTinh");
					this.OnTenGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIOITINH_DONGHO", Storage="_DONGHOs", ThisKey="MaGioiTinh", OtherKey="IDGioiTinh")]
		public EntitySet<DONGHO> DONGHOs
		{
			get
			{
				return this._DONGHOs;
			}
			set
			{
				this._DONGHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.GIOITINH = this;
		}
		
		private void detach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.GIOITINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINHDANG")]
	public partial class HINHDANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHinhDang;
		
		private string _TenHinhDang;
		
		private EntitySet<DONGHO> _DONGHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHinhDangChanging(int value);
    partial void OnMaHinhDangChanged();
    partial void OnTenHinhDangChanging(string value);
    partial void OnTenHinhDangChanged();
    #endregion
		
		public HINHDANG()
		{
			this._DONGHOs = new EntitySet<DONGHO>(new Action<DONGHO>(this.attach_DONGHOs), new Action<DONGHO>(this.detach_DONGHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHinhDang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHinhDang
		{
			get
			{
				return this._MaHinhDang;
			}
			set
			{
				if ((this._MaHinhDang != value))
				{
					this.OnMaHinhDangChanging(value);
					this.SendPropertyChanging();
					this._MaHinhDang = value;
					this.SendPropertyChanged("MaHinhDang");
					this.OnMaHinhDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHinhDang", DbType="NVarChar(30)")]
		public string TenHinhDang
		{
			get
			{
				return this._TenHinhDang;
			}
			set
			{
				if ((this._TenHinhDang != value))
				{
					this.OnTenHinhDangChanging(value);
					this.SendPropertyChanging();
					this._TenHinhDang = value;
					this.SendPropertyChanged("TenHinhDang");
					this.OnTenHinhDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHDANG_DONGHO", Storage="_DONGHOs", ThisKey="MaHinhDang", OtherKey="IDHinhDangMatSo")]
		public EntitySet<DONGHO> DONGHOs
		{
			get
			{
				return this._DONGHOs;
			}
			set
			{
				this._DONGHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.HINHDANG = this;
		}
		
		private void detach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.HINHDANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoaDon;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<double> _TongTien;
		
		private System.Nullable<int> _TinhTrang;
		
		private System.Nullable<int> _IDKhachHang;
		
		private EntitySet<CTHOADONBANDONGHO> _CTHOADONBANDONGHOs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<TINHTRANGDONHANG> _TINHTRANGDONHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(int value);
    partial void OnMaHoaDonChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnTinhTrangChanging(System.Nullable<int> value);
    partial void OnTinhTrangChanged();
    partial void OnIDKhachHangChanging(System.Nullable<int> value);
    partial void OnIDKhachHangChanged();
    #endregion
		
		public HOADON()
		{
			this._CTHOADONBANDONGHOs = new EntitySet<CTHOADONBANDONGHO>(new Action<CTHOADONBANDONGHO>(this.attach_CTHOADONBANDONGHOs), new Action<CTHOADONBANDONGHO>(this.detach_CTHOADONBANDONGHOs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._TINHTRANGDONHANG = default(EntityRef<TINHTRANGDONHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Int")]
		public System.Nullable<int> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					if (this._TINHTRANGDONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", DbType="Int")]
		public System.Nullable<int> IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADONBANDONGHO", Storage="_CTHOADONBANDONGHOs", ThisKey="MaHoaDon", OtherKey="IDHoaDon")]
		public EntitySet<CTHOADONBANDONGHO> CTHOADONBANDONGHOs
		{
			get
			{
				return this._CTHOADONBANDONGHOs;
			}
			set
			{
				this._CTHOADONBANDONGHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="IDKhachHang", OtherKey="MaKhachHang", IsForeignKey=true, DeleteRule="SET NULL")]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._IDKhachHang = value.MaKhachHang;
					}
					else
					{
						this._IDKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTRANGDONHANG_HOADON", Storage="_TINHTRANGDONHANG", ThisKey="TinhTrang", OtherKey="MaTinhTrang", IsForeignKey=true)]
		public TINHTRANGDONHANG TINHTRANGDONHANG
		{
			get
			{
				return this._TINHTRANGDONHANG.Entity;
			}
			set
			{
				TINHTRANGDONHANG previousValue = this._TINHTRANGDONHANG.Entity;
				if (((previousValue != value) 
							|| (this._TINHTRANGDONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTRANGDONHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._TINHTRANGDONHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._TinhTrang = value.MaTinhTrang;
					}
					else
					{
						this._TinhTrang = default(Nullable<int>);
					}
					this.SendPropertyChanged("TINHTRANGDONHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONBANDONGHOs(CTHOADONBANDONGHO entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHOADONBANDONGHOs(CTHOADONBANDONGHO entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhachHang;
		
		private string _TenKhachHang;
		
		private string _DiachiKH;
		
		private string _DienThoaiKH;
		
		private string _IDTaiKhoanKH;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(int value);
    partial void OnMaKhachHangChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnDiachiKHChanging(string value);
    partial void OnDiachiKHChanged();
    partial void OnDienThoaiKHChanging(string value);
    partial void OnDienThoaiKHChanged();
    partial void OnIDTaiKhoanKHChanging(string value);
    partial void OnIDTaiKhoanKHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(50)")]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiachiKH", DbType="NVarChar(200)")]
		public string DiachiKH
		{
			get
			{
				return this._DiachiKH;
			}
			set
			{
				if ((this._DiachiKH != value))
				{
					this.OnDiachiKHChanging(value);
					this.SendPropertyChanging();
					this._DiachiKH = value;
					this.SendPropertyChanged("DiachiKH");
					this.OnDiachiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiKH", DbType="VarChar(50)")]
		public string DienThoaiKH
		{
			get
			{
				return this._DienThoaiKH;
			}
			set
			{
				if ((this._DienThoaiKH != value))
				{
					this.OnDienThoaiKHChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiKH = value;
					this.SendPropertyChanged("DienThoaiKH");
					this.OnDienThoaiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTaiKhoanKH", DbType="VarChar(50)")]
		public string IDTaiKhoanKH
		{
			get
			{
				return this._IDTaiKhoanKH;
			}
			set
			{
				if ((this._IDTaiKhoanKH != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTaiKhoanKHChanging(value);
					this.SendPropertyChanging();
					this._IDTaiKhoanKH = value;
					this.SendPropertyChanged("IDTaiKhoanKH");
					this.OnIDTaiKhoanKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MaKhachHang", OtherKey="IDKhachHang")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_TAIKHOAN", ThisKey="IDTaiKhoanKH", OtherKey="MaTaiKhoan", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._IDTaiKhoanKH = value.MaTaiKhoan;
					}
					else
					{
						this._IDTaiKhoanKH = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KICHTHUOC")]
	public partial class KICHTHUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKichThuoc;
		
		private string _TenKichThuoc;
		
		private EntitySet<DONGHO> _DONGHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKichThuocChanging(int value);
    partial void OnMaKichThuocChanged();
    partial void OnTenKichThuocChanging(string value);
    partial void OnTenKichThuocChanged();
    #endregion
		
		public KICHTHUOC()
		{
			this._DONGHOs = new EntitySet<DONGHO>(new Action<DONGHO>(this.attach_DONGHOs), new Action<DONGHO>(this.detach_DONGHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKichThuoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKichThuoc
		{
			get
			{
				return this._MaKichThuoc;
			}
			set
			{
				if ((this._MaKichThuoc != value))
				{
					this.OnMaKichThuocChanging(value);
					this.SendPropertyChanging();
					this._MaKichThuoc = value;
					this.SendPropertyChanged("MaKichThuoc");
					this.OnMaKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKichThuoc", DbType="VarChar(30)")]
		public string TenKichThuoc
		{
			get
			{
				return this._TenKichThuoc;
			}
			set
			{
				if ((this._TenKichThuoc != value))
				{
					this.OnTenKichThuocChanging(value);
					this.SendPropertyChanging();
					this._TenKichThuoc = value;
					this.SendPropertyChanged("TenKichThuoc");
					this.OnTenKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHTHUOC_DONGHO", Storage="_DONGHOs", ThisKey="MaKichThuoc", OtherKey="IDKichThuocMatSo")]
		public EntitySet<DONGHO> DONGHOs
		{
			get
			{
				return this._DONGHOs;
			}
			set
			{
				this._DONGHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.KICHTHUOC = this;
		}
		
		private void detach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.KICHTHUOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIDAY")]
	public partial class LOAIDAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiDay;
		
		private string _TenLoaiDay;
		
		private EntitySet<DONGHO> _DONGHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiDayChanging(int value);
    partial void OnMaLoaiDayChanged();
    partial void OnTenLoaiDayChanging(string value);
    partial void OnTenLoaiDayChanged();
    #endregion
		
		public LOAIDAY()
		{
			this._DONGHOs = new EntitySet<DONGHO>(new Action<DONGHO>(this.attach_DONGHOs), new Action<DONGHO>(this.detach_DONGHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDay", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiDay
		{
			get
			{
				return this._MaLoaiDay;
			}
			set
			{
				if ((this._MaLoaiDay != value))
				{
					this.OnMaLoaiDayChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDay = value;
					this.SendPropertyChanged("MaLoaiDay");
					this.OnMaLoaiDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiDay", DbType="NVarChar(100)")]
		public string TenLoaiDay
		{
			get
			{
				return this._TenLoaiDay;
			}
			set
			{
				if ((this._TenLoaiDay != value))
				{
					this.OnTenLoaiDayChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiDay = value;
					this.SendPropertyChanged("TenLoaiDay");
					this.OnTenLoaiDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDAY_DONGHO", Storage="_DONGHOs", ThisKey="MaLoaiDay", OtherKey="IDLoaiDay")]
		public EntitySet<DONGHO> DONGHOs
		{
			get
			{
				return this._DONGHOs;
			}
			set
			{
				this._DONGHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDAY = this;
		}
		
		private void detach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDAY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIDONGHO")]
	public partial class LOAIDONGHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiDongHo;
		
		private string _TenLoaiDongHo;
		
		private EntitySet<DONGHO> _DONGHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiDongHoChanging(int value);
    partial void OnMaLoaiDongHoChanged();
    partial void OnTenLoaiDongHoChanging(string value);
    partial void OnTenLoaiDongHoChanged();
    #endregion
		
		public LOAIDONGHO()
		{
			this._DONGHOs = new EntitySet<DONGHO>(new Action<DONGHO>(this.attach_DONGHOs), new Action<DONGHO>(this.detach_DONGHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDongHo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiDongHo
		{
			get
			{
				return this._MaLoaiDongHo;
			}
			set
			{
				if ((this._MaLoaiDongHo != value))
				{
					this.OnMaLoaiDongHoChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDongHo = value;
					this.SendPropertyChanged("MaLoaiDongHo");
					this.OnMaLoaiDongHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiDongHo", DbType="NVarChar(100)")]
		public string TenLoaiDongHo
		{
			get
			{
				return this._TenLoaiDongHo;
			}
			set
			{
				if ((this._TenLoaiDongHo != value))
				{
					this.OnTenLoaiDongHoChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiDongHo = value;
					this.SendPropertyChanged("TenLoaiDongHo");
					this.OnTenLoaiDongHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDONGHO_DONGHO", Storage="_DONGHOs", ThisKey="MaLoaiDongHo", OtherKey="IDLoaiDongHo")]
		public EntitySet<DONGHO> DONGHOs
		{
			get
			{
				return this._DONGHOs;
			}
			set
			{
				this._DONGHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDONGHO = this;
		}
		
		private void detach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDONGHO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MUCDOCHONGNUOC")]
	public partial class MUCDOCHONGNUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMucDoChongNuoc;
		
		private string _TenMucDoChongNuoc;
		
		private EntitySet<DONGHO> _DONGHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMucDoChongNuocChanging(int value);
    partial void OnMaMucDoChongNuocChanged();
    partial void OnTenMucDoChongNuocChanging(string value);
    partial void OnTenMucDoChongNuocChanged();
    #endregion
		
		public MUCDOCHONGNUOC()
		{
			this._DONGHOs = new EntitySet<DONGHO>(new Action<DONGHO>(this.attach_DONGHOs), new Action<DONGHO>(this.detach_DONGHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMucDoChongNuoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMucDoChongNuoc
		{
			get
			{
				return this._MaMucDoChongNuoc;
			}
			set
			{
				if ((this._MaMucDoChongNuoc != value))
				{
					this.OnMaMucDoChongNuocChanging(value);
					this.SendPropertyChanging();
					this._MaMucDoChongNuoc = value;
					this.SendPropertyChanged("MaMucDoChongNuoc");
					this.OnMaMucDoChongNuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMucDoChongNuoc", DbType="NVarChar(30)")]
		public string TenMucDoChongNuoc
		{
			get
			{
				return this._TenMucDoChongNuoc;
			}
			set
			{
				if ((this._TenMucDoChongNuoc != value))
				{
					this.OnTenMucDoChongNuocChanging(value);
					this.SendPropertyChanging();
					this._TenMucDoChongNuoc = value;
					this.SendPropertyChanged("TenMucDoChongNuoc");
					this.OnTenMucDoChongNuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MUCDOCHONGNUOC_DONGHO", Storage="_DONGHOs", ThisKey="MaMucDoChongNuoc", OtherKey="IDMucDoChongNuoc")]
		public EntitySet<DONGHO> DONGHOs
		{
			get
			{
				return this._DONGHOs;
			}
			set
			{
				this._DONGHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.MUCDOCHONGNUOC = this;
		}
		
		private void detach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.MUCDOCHONGNUOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUANTRI")]
	public partial class QUANTRI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQuanTri;
		
		private string _TenQuanTri;
		
		private string _DiachiQT;
		
		private string _DienThoaiQT;
		
		private string _IDTaiKhoanQT;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuanTriChanging(int value);
    partial void OnMaQuanTriChanged();
    partial void OnTenQuanTriChanging(string value);
    partial void OnTenQuanTriChanged();
    partial void OnDiachiQTChanging(string value);
    partial void OnDiachiQTChanged();
    partial void OnDienThoaiQTChanging(string value);
    partial void OnDienThoaiQTChanged();
    partial void OnIDTaiKhoanQTChanging(string value);
    partial void OnIDTaiKhoanQTChanged();
    #endregion
		
		public QUANTRI()
		{
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuanTri", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaQuanTri
		{
			get
			{
				return this._MaQuanTri;
			}
			set
			{
				if ((this._MaQuanTri != value))
				{
					this.OnMaQuanTriChanging(value);
					this.SendPropertyChanging();
					this._MaQuanTri = value;
					this.SendPropertyChanged("MaQuanTri");
					this.OnMaQuanTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuanTri", DbType="NVarChar(50)")]
		public string TenQuanTri
		{
			get
			{
				return this._TenQuanTri;
			}
			set
			{
				if ((this._TenQuanTri != value))
				{
					this.OnTenQuanTriChanging(value);
					this.SendPropertyChanging();
					this._TenQuanTri = value;
					this.SendPropertyChanged("TenQuanTri");
					this.OnTenQuanTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiachiQT", DbType="NVarChar(200)")]
		public string DiachiQT
		{
			get
			{
				return this._DiachiQT;
			}
			set
			{
				if ((this._DiachiQT != value))
				{
					this.OnDiachiQTChanging(value);
					this.SendPropertyChanging();
					this._DiachiQT = value;
					this.SendPropertyChanged("DiachiQT");
					this.OnDiachiQTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiQT", DbType="VarChar(50)")]
		public string DienThoaiQT
		{
			get
			{
				return this._DienThoaiQT;
			}
			set
			{
				if ((this._DienThoaiQT != value))
				{
					this.OnDienThoaiQTChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiQT = value;
					this.SendPropertyChanged("DienThoaiQT");
					this.OnDienThoaiQTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTaiKhoanQT", DbType="VarChar(50)")]
		public string IDTaiKhoanQT
		{
			get
			{
				return this._IDTaiKhoanQT;
			}
			set
			{
				if ((this._IDTaiKhoanQT != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTaiKhoanQTChanging(value);
					this.SendPropertyChanging();
					this._IDTaiKhoanQT = value;
					this.SendPropertyChanged("IDTaiKhoanQT");
					this.OnIDTaiKhoanQTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_QUANTRI", Storage="_TAIKHOAN", ThisKey="IDTaiKhoanQT", OtherKey="MaTaiKhoan", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.QUANTRIs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.QUANTRIs.Add(this);
						this._IDTaiKhoanQT = value.MaTaiKhoan;
					}
					else
					{
						this._IDTaiKhoanQT = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTaiKhoan;
		
		private string _MatKhau;
		
		private string _Email;
		
		private System.Nullable<int> _IDVaiTro;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
		private EntitySet<QUANTRI> _QUANTRIs;
		
		private EntityRef<VAITRO> _VAITRO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTaiKhoanChanging(string value);
    partial void OnMaTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIDVaiTroChanging(System.Nullable<int> value);
    partial void OnIDVaiTroChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			this._QUANTRIs = new EntitySet<QUANTRI>(new Action<QUANTRI>(this.attach_QUANTRIs), new Action<QUANTRI>(this.detach_QUANTRIs));
			this._VAITRO = default(EntityRef<VAITRO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiKhoan", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVaiTro", DbType="Int")]
		public System.Nullable<int> IDVaiTro
		{
			get
			{
				return this._IDVaiTro;
			}
			set
			{
				if ((this._IDVaiTro != value))
				{
					if (this._VAITRO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDVaiTroChanging(value);
					this.SendPropertyChanging();
					this._IDVaiTro = value;
					this.SendPropertyChanged("IDVaiTro");
					this.OnIDVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_KHACHHANGs", ThisKey="MaTaiKhoan", OtherKey="IDTaiKhoanKH")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_QUANTRI", Storage="_QUANTRIs", ThisKey="MaTaiKhoan", OtherKey="IDTaiKhoanQT")]
		public EntitySet<QUANTRI> QUANTRIs
		{
			get
			{
				return this._QUANTRIs;
			}
			set
			{
				this._QUANTRIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VAITRO_TAIKHOAN", Storage="_VAITRO", ThisKey="IDVaiTro", OtherKey="MaVaiTro", IsForeignKey=true)]
		public VAITRO VAITRO
		{
			get
			{
				return this._VAITRO.Entity;
			}
			set
			{
				VAITRO previousValue = this._VAITRO.Entity;
				if (((previousValue != value) 
							|| (this._VAITRO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VAITRO.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._VAITRO.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._IDVaiTro = value.MaVaiTro;
					}
					else
					{
						this._IDVaiTro = default(Nullable<int>);
					}
					this.SendPropertyChanged("VAITRO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_QUANTRIs(QUANTRI entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_QUANTRIs(QUANTRI entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUONGHIEU")]
	public partial class THUONGHIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThuongHieu;
		
		private string _TenThuongHieu;
		
		private EntitySet<DONGHO> _DONGHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThuongHieuChanging(int value);
    partial void OnMaThuongHieuChanged();
    partial void OnTenThuongHieuChanging(string value);
    partial void OnTenThuongHieuChanged();
    #endregion
		
		public THUONGHIEU()
		{
			this._DONGHOs = new EntitySet<DONGHO>(new Action<DONGHO>(this.attach_DONGHOs), new Action<DONGHO>(this.detach_DONGHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThuongHieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThuongHieu
		{
			get
			{
				return this._MaThuongHieu;
			}
			set
			{
				if ((this._MaThuongHieu != value))
				{
					this.OnMaThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._MaThuongHieu = value;
					this.SendPropertyChanged("MaThuongHieu");
					this.OnMaThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThuongHieu", DbType="NVarChar(100)")]
		public string TenThuongHieu
		{
			get
			{
				return this._TenThuongHieu;
			}
			set
			{
				if ((this._TenThuongHieu != value))
				{
					this.OnTenThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._TenThuongHieu = value;
					this.SendPropertyChanged("TenThuongHieu");
					this.OnTenThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_DONGHO", Storage="_DONGHOs", ThisKey="MaThuongHieu", OtherKey="IDThuongHieu")]
		public EntitySet<DONGHO> DONGHOs
		{
			get
			{
				return this._DONGHOs;
			}
			set
			{
				this._DONGHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = this;
		}
		
		private void detach_DONGHOs(DONGHO entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINHTRANGDONHANG")]
	public partial class TINHTRANGDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrang;
		
		private string _TenTinhTrang;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangChanging(int value);
    partial void OnMaTinhTrangChanged();
    partial void OnTenTinhTrangChanging(string value);
    partial void OnTenTinhTrangChanged();
    #endregion
		
		public TINHTRANGDONHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhTrang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTinhTrang
		{
			get
			{
				return this._MaTinhTrang;
			}
			set
			{
				if ((this._MaTinhTrang != value))
				{
					this.OnMaTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrang = value;
					this.SendPropertyChanged("MaTinhTrang");
					this.OnMaTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinhTrang", DbType="NVarChar(100)")]
		public string TenTinhTrang
		{
			get
			{
				return this._TenTinhTrang;
			}
			set
			{
				if ((this._TenTinhTrang != value))
				{
					this.OnTenTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrang = value;
					this.SendPropertyChanged("TenTinhTrang");
					this.OnTenTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTRANGDONHANG_HOADON", Storage="_HOADONs", ThisKey="MaTinhTrang", OtherKey="TinhTrang")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANGDONHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANGDONHANG = null;
		}
	}
}
#pragma warning restore 1591
